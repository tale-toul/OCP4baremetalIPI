---
- name: Install sushy tools and supporting packages
  pip:
    name:
      - sushy-tools
      - libvirt-python
      - passlib
- name: Create directory for sushy tools certificate
  file:
    path: /etc/pki/sushy-tools/private/
    mode: 0750
    state: directory
- name: Generate the private key for sushy tools
  openssl_privatekey:
    path: /etc/pki/sushy-tools/private/sushy-tools.key
- name: Create CSR for sushy tools certificate
  openssl_csr:
    path: /etc/pki/sushy-tools/sushy-tools.csr
    privatekey_path: /etc/pki/sushy-tools/private/sushy-tools.key
    common_name: "sushy-tools"
- name: Create X509 certificate for sushy tools
  openssl_certificate:
    path: /etc/pki/sushy-tools/sushy-tools.cert
    privatekey_path: /etc/pki/sushy-tools/private/sushy-tools.key
    csr_path: /etc/pki/sushy-tools/sushy-tools.csr
    provider: selfsigned
- name: Create directory for htpasswd file for sushy tools
  file:
    path: /etc/sushy-tools/
    mode: 0755
    state: directory
- name: Generate random password for sushy tools admin user
  set_fact:
    sushy_admin_passwd: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
  no_log: true
- name: Create htpasswd file for sushy tools authentication
  htpasswd:
    crypt_scheme: bcrypt
    path: /etc/sushy-tools/htusers
    name: admin
    password: "{{ sushy_admin_passwd }}"
    owner: root
    group: root
    mode: 0640
- name: Render sushy tools configuration file
  template:
    src: redfish/sushy.j2
    dest: /etc/sushy-tools/sushy.conf
    mode: 0664
    owner: root
    group: root
- name: Copy sushy tools systemd unit
  copy:
    src: redfish/sushyd.service
    dest: /etc/systemd/system/sushyd.service
    owner: root
    group: root
    mode: '0644'
- name: Enable and start sushy tools service
  systemd:
    daemon_reload: yes
    name: sushyd
    enabled: yes
    state: started
- name: Allow access to sushy tools service in firewall
  firewalld:
    port: "{{ sushy_tools_port }}/tcp"
    zone: libvirt
    permanent: yes
    immediate: yes
    state: enabled

# The UUIDs are used later as part of the install-config.yaml file
- name: Save UUIDs for master terraform VMs
  command: virsh -q domuuid {{ item }}
  loop: "{{ master_names }}"
  register: _masters_uuid
- set_fact:
    masters_uuid: "{{ _masters_uuid }}"
- name: Save UUIDs for worker terraform VMs
  command: virsh -q domuuid {{ item }}
  loop: "{{ worker_names }}"
  register: _workers_uuid
- set_fact:
    workers_uuid: "{{ _workers_uuid }}"
